<트리거의 이해>




트리거는 특정한 데이터베이스 작업이 발생하면 자동으로 실행되는 특별한 저장 프로시저 이다. 

트리거는 테이블에 대한 INSERT, UPDATE, DELETE 작업 및 이러한 작업의 조합과 연계되어 실행될 수 있다.




저장 프로시저는 단순히 저장된 SQL 문이지만 트리거는 특정한 테이블과 연계된 것이다.




트리거 내에서는 다음 데이터를 활용할 수 있다.




- INSERT 작업으로 추가되는 모든 새 데이터

- UPDATE 작업으로 처리되는 새 데이터와 이전 데이터

- DELETE 작업으로 삭제되는 데이터







트리거의 일반적인 쓰임은 다음과 같다.




- 데이터 무결성 보장 : 예를 들어 도시의 이름을 INSERT 나 UPDATE 작업으로 추가하거나 업데이트할 때 모든 도시의 이름이 대문자가 되도록 한다.

- 데이블의 데이터 변화에 따라 특정한 작업 수행 : 예를 들어 테이블에 행이 업데이트되거나 삭제될 때 그 기록을 기록 테이블에 저장한다.

- 필요에 따라 추가적인 데이터 확인과 롤백 수행 : 예를 들어 고객의 신용한도가 초과되지 않도록 하고 만약 초과된 경우 더 이상의 주문이 불가능하도록 한다.

- 계산된 열 값을 계산하거나 날짜/시간을 업데이트







다음 예에서는 Customers 테이블의 cust_state 열을 INSERT 또는 UPDATE할 때 실행되는 트리거를 만들어 추가 또는 업데이트되는 값이 대문자가 되도록 한다.




SQL Server에서는 다음과 같이 작성한다.




CREATE TRIGGER customer_state

ON Customers

FOR INSERT, UPDATE

AS

UPDATE Customers

SET cust_state = Upper(cust_state)

WHERE Customers.cust_id=inserted.cust_id;







Oracle과 PostgreSQL에서는 다음과 같이 작성한다.




CREATE TRIGGER customer_state

AFTER INSERT OR UPDATE

FOR EACH ROW

BEGIN

UPDATE Customers

SET cust_state = Upper(cust_state)

WHERE Customers.cust_id=:OLD.cust_id

END;